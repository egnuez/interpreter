digraph G {Programm63[label="Programm"];
Programm63 -> Id1;
Id1 [label="Id(Part12)"];
Programm63 -> Block59;
Block59 [label="Block"];
Block59 -> VarDecl60;
VarDecl60 [label="VarDecl"];
VarDecl60 -> Id2;
Id2 [label="Id(a)"];
VarDecl60 -> Type4;
Type4 [label="Type(INTEGER)"];
Block59 -> VarDecl61;
VarDecl61 [label="VarDecl"];
VarDecl61 -> Id3;
Id3 [label="Id(b)"];
VarDecl61 -> Type5;
Type5 [label="Type(INTEGER)"];
Block59 -> VarDecl62;
VarDecl62 [label="VarDecl"];
VarDecl62 -> Id6;
Id6 [label="Id(y)"];
VarDecl62 -> Type7;
Type7 [label="Type(REAL)"];
Block59 -> ProcedureDecl35;
ProcedureDecl35 [label="ProcedureDecl"];
ProcedureDecl35 -> Id8;
Id8 [label="Id(P1)"];
ProcedureDecl35 -> Block32;
Block32 [label="Block"];
Block32 -> VarDecl33;
VarDecl33 [label="VarDecl"];
VarDecl33 -> Id9;
Id9 [label="Id(a)"];
VarDecl33 -> Type10;
Type10 [label="Type(REAL)"];
Block32 -> VarDecl34;
VarDecl34 [label="VarDecl"];
VarDecl34 -> Id11;
Id11 [label="Id(k)"];
VarDecl34 -> Type12;
Type12 [label="Type(INTEGER)"];
Block32 -> ProcedureDecl26;
ProcedureDecl26 [label="ProcedureDecl"];
ProcedureDecl26 -> Id13;
Id13 [label="Id(P2)"];
ProcedureDecl26 -> Block23;
Block23 [label="Block"];
Block23 -> VarDecl24;
VarDecl24 [label="VarDecl"];
VarDecl24 -> Id14;
Id14 [label="Id(a)"];
VarDecl24 -> Type16;
Type16 [label="Type(INTEGER)"];
Block23 -> VarDecl25;
VarDecl25 [label="VarDecl"];
VarDecl25 -> Id15;
Id15 [label="Id(z)"];
VarDecl25 -> Type17;
Type17 [label="Type(INTEGER)"];
Block23 -> StatementList22;
StatementList22 [label="StatementList"];
StatementList22 -> Assign20;
Assign20 [label="Assign"];
Assign20 -> Id18;
Id18 [label="Id(z)"];
Assign20 -> Num19;
Num19 [label="Num(777)"];
StatementList22 -> Empty21;
Empty21 [label="Empty"];
Block32 -> StatementList31;
StatementList31 [label="StatementList"];
StatementList31 -> Assign29;
Assign29 [label="Assign"];
Assign29 -> Id27;
Id27 [label="Id(k)"];
Assign29 -> Num28;
Num28 [label="Num(1)"];
StatementList31 -> Empty30;
Empty30 [label="Empty"];
Block59 -> StatementList58;
StatementList58 [label="StatementList"];
StatementList58 -> Assign38;
Assign38 [label="Assign"];
Assign38 -> Id36;
Id36 [label="Id(a)"];
Assign38 -> Num37;
Num37 [label="Num(2)"];
StatementList58 -> Assign49;
Assign49 [label="Assign"];
Assign49 -> Id39;
Id39 [label="Id(b)"];
Assign49 -> BinOp48;
BinOp48 [label="BinOp(+)"];
BinOp48 -> BinOp42;
BinOp42 [label="BinOp(*)"];
BinOp42 -> Num40;
Num40 [label="Num(10)"];
BinOp42 -> Id41;
Id41 [label="Id(a)"];
BinOp48 -> BinOp47;
BinOp47 [label="BinOp(DIV)"];
BinOp47 -> BinOp45;
BinOp45 [label="BinOp(*)"];
BinOp45 -> Num43;
Num43 [label="Num(10)"];
BinOp45 -> Id44;
Id44 [label="Id(a)"];
BinOp47 -> Num46;
Num46 [label="Num(4)"];
StatementList58 -> Assign56;
Assign56 [label="Assign"];
Assign56 -> Id50;
Id50 [label="Id(y)"];
Assign56 -> BinOp55;
BinOp55 [label="BinOp(+)"];
BinOp55 -> BinOp53;
BinOp53 [label="BinOp(/)"];
BinOp53 -> Num51;
Num51 [label="Num(20)"];
BinOp53 -> Num52;
Num52 [label="Num(7)"];
BinOp55 -> Num54;
Num54 [label="Num(3)"];
StatementList58 -> Empty57;
Empty57 [label="Empty"];
}